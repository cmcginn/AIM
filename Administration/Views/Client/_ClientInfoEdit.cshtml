@model AIM.Administration.Models.ClientModel
@Html.ValidationSummary(true)
<fieldset>
    <legend>Fields</legend>@Html.HiddenFor(model => model.Id)
    <div class="editor-label">
        @Html.LabelFor(model => model.Company)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Company) @Html.ValidationMessageFor(model => model.Company)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.AccountId)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.AccountId) @Html.ValidationMessageFor(model => model.AccountId)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ApiKey)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ApiKey) @Html.ValidationMessageFor(model => model.ApiKey)
    </div>
    <div class="editor-label">
        @Html.Label("Enable Updates")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.EnableUpdates)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ImportType)
    </div>
    @{
        var selectList = new List<SelectListItem>
            {
                new SelectListItem{ Text="Please Select", Value=String.Empty},
                new SelectListItem{ Text="Mind Body Online", Value="1"},
                new SelectListItem{ Text="Other", Value="2"}
            };
       // selectList.Single(n => n.Value == Model.ImportTypeId.ToString()).Selected = true;
    }
    <div class="editor-field">
        @Html.DropDownListFor(model => model.ImportTypeId, selectList)
    </div>
    <div id="clientParameters">
        @{Html.RenderAction("ClientParametersView", Model);}
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Email)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Email)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.AllClientsPassword)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.AllClientsPassword)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Active)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Active) @Html.ValidationMessageFor(model => model.Active)
    </div>
    <p>
        <input type="submit" value="Save" />
    </p>
</fieldset>
