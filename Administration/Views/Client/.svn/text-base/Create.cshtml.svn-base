@model AIM.Administration.Models.NewClientModel
@{
    
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content("~/Scripts/Client/Client.js")" type="text/javascript"></script>
<h2>
    Create</h2>
@if (ViewData["AccountSetupException"] != null)
{
    <h3 style="color: #FF0000">
        There was an error creating the account: @ViewData["AccountSetupException"].ToString()</h3>
        
}
@using (Html.BeginForm())
{
@Html.ValidationSummary(true)
    <fieldset>
        <legend>Fields</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.Company)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Company) 
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Newsletter)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Newsletter) 
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address) 
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CityStateZip)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CityStateZip)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Phone)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Fullname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Fullname)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Website)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Website) 
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ImportType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ImportType, Model)
        </div>
         <div class="editor-label">
            @Html.Label("Enable Updates")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model=>model.EnableUpdates)
        </div>
        <div id="clientParameters">
        </div>
      
        <div class="editor-label">
            @Html.LabelFor(model => model.GroupName)
        </div>
        <div class="editor-field">
            @* @Html.EditorFor(model => model.GroupName) @Html.ValidationMessageFor(model => model.GroupName)*@
            <select id="GroupName" name="GroupName">
                <option value="">Please Select</option>
                <option value="Fitness Owner">Fitness Owner</option>
                <option value="Development">Development</option>
                <option value="Small Business Owners">Small Business Owners</option>
            </select>
        </div> 
        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email) 
        </div>       
        <div class="editor-label">
            @Html.LabelFor(model => model.AllClientsPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AllClientsPassword)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Active)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Active) @Html.ValidationMessageFor(model => model.Active)
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
