@model AIM.Common.Types.AllClients.AllClientsContact
<script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@if (ViewData.ContainsKey("ImportResult"))
{
    var message = String.Empty;
    var resultCode = (int)ViewData["ImportResult"];
    switch (resultCode)
    {
        case 0:
            message = "1 Contact Successfully Imported";
            break;
        default:
            break;
    }
    
    <p>
        @message
    </p>
    <p>
        @Html.ActionLink("Import another contact", "Index")
    </p>
}
else
{
     if (ViewData["SingleImportError"] != null)
     {       
            <p class="error">
                @ViewData["SingleImportError"]
            </p>
     }
    <fieldset>
        <legend><strong>Individual Contact Upload</strong> </legend>
       
        <p>
            <label>
                Assign contacts to the following category:</label>
            <select name="Category">
                @foreach (var item in (List<AIM.Common.Types.AllClients.Category>)ViewBag.Categories)
                {
                    <option value="@item.Id" >@item.Name</option>
                }
            </select>
        </p>
        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.State)
            @Html.ValidationMessageFor(model => model.State)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Zip)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Zip)
            @Html.ValidationMessageFor(model => model.Zip)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>
        <div class="editor-label">
            @Html.Label("Birthday (MM/DD/YYYY)")
        </div>
        <div class="editor-field">
            @Html.TextBox("Birthday")           
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>
    </fieldset>

    <input type="submit" name="single" value="Import" style="margin: 10px" />

}