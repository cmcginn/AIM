#pragma warning disable 1591
#pragma warning disable 0414        
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;

namespace AIM.Data
{
    /// <summary>
    /// The class representing the dbo.aspnet_Membership table.
    /// </summary>
    [System.Data.Linq.Mapping.Table(Name="dbo.aspnet_Membership")]
    [System.Runtime.Serialization.DataContract(IsReference = true)]
    [System.ComponentModel.DataAnnotations.ScaffoldTable(true)]
    [System.ComponentModel.DataAnnotations.MetadataType(typeof(AIM.Data.AspnetMembership.Metadata))]
    [System.Data.Services.Common.DataServiceKey("UserId")]
    [System.Diagnostics.DebuggerDisplay("UserId: {UserId}")]
    public partial class AspnetMembership
        : LinqEntityBase, ICloneable, AIM.Data.IAspnetMembership  
    {
        #region Static Constructor
        /// <summary>
        /// Initializes the <see cref="AspnetMembership"/> class.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static AspnetMembership()
        {
            AddSharedRules();
        }
        #endregion

        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="AspnetMembership"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetMembership()
        {
            Initialize();
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void Initialize()
        {
            _aspnetApplications = default(System.Data.Linq.EntityRef<AspnetApplications>);
            _aspnetUsers = default(System.Data.Linq.EntityRef<AspnetUsers>);
            OnCreated();
        }
        #endregion

        #region Column Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Guid _applicationId;

        /// <summary>
        /// Gets or sets the ApplicationId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "ApplicationId", Storage = "_applicationId", DbType = "uniqueidentifier NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 1)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Guid ApplicationId
        {
            get { return _applicationId; }
            set
            {
                if (_applicationId != value)
                {
                    if (_aspnetApplications.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnApplicationIdChanging(value);
                    SendPropertyChanging("ApplicationId");
                    _applicationId = value;
                    SendPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Guid _userId;

        /// <summary>
        /// Gets or sets the UserId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "UserId", Storage = "_userId", DbType = "uniqueidentifier NOT NULL", IsPrimaryKey = true, CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 2)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Guid UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    if (_aspnetUsers.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnUserIdChanging(value);
                    SendPropertyChanging("UserId");
                    _userId = value;
                    SendPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _password;

        /// <summary>
        /// Gets or sets the Password column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Password", Storage = "_password", DbType = "nvarchar(128) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        [System.Runtime.Serialization.DataMember(Order = 3)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Password
        {
            get { return _password; }
            set
            {
                if (_password != value)
                {
                    OnPasswordChanging(value);
                    SendPropertyChanging("Password");
                    _password = value;
                    SendPropertyChanged("Password");
                    OnPasswordChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private int _passwordFormat;

        /// <summary>
        /// Gets or sets the PasswordFormat column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "PasswordFormat", Storage = "_passwordFormat", DbType = "int NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 4)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public int PasswordFormat
        {
            get { return _passwordFormat; }
            set
            {
                if (_passwordFormat != value)
                {
                    OnPasswordFormatChanging(value);
                    SendPropertyChanging("PasswordFormat");
                    _passwordFormat = value;
                    SendPropertyChanged("PasswordFormat");
                    OnPasswordFormatChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _passwordSalt;

        /// <summary>
        /// Gets or sets the PasswordSalt column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "PasswordSalt", Storage = "_passwordSalt", DbType = "nvarchar(128) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        [System.Runtime.Serialization.DataMember(Order = 5)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string PasswordSalt
        {
            get { return _passwordSalt; }
            set
            {
                if (_passwordSalt != value)
                {
                    OnPasswordSaltChanging(value);
                    SendPropertyChanging("PasswordSalt");
                    _passwordSalt = value;
                    SendPropertyChanged("PasswordSalt");
                    OnPasswordSaltChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _mobilePIN;

        /// <summary>
        /// Gets or sets the MobilePIN column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "MobilePIN", Storage = "_mobilePIN", DbType = "nvarchar(16)")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        [System.Runtime.Serialization.DataMember(Order = 6)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string MobilePIN
        {
            get { return _mobilePIN; }
            set
            {
                if (_mobilePIN != value)
                {
                    OnMobilePINChanging(value);
                    SendPropertyChanging("MobilePIN");
                    _mobilePIN = value;
                    SendPropertyChanged("MobilePIN");
                    OnMobilePINChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _email;

        /// <summary>
        /// Gets or sets the Email column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Email", Storage = "_email", DbType = "nvarchar(256)")]
        [System.ComponentModel.DataAnnotations.StringLength(256)]
        [System.Runtime.Serialization.DataMember(Order = 7)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Email
        {
            get { return _email; }
            set
            {
                if (_email != value)
                {
                    OnEmailChanging(value);
                    SendPropertyChanging("Email");
                    _email = value;
                    SendPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _loweredEmail;

        /// <summary>
        /// Gets or sets the LoweredEmail column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LoweredEmail", Storage = "_loweredEmail", DbType = "nvarchar(256)")]
        [System.ComponentModel.DataAnnotations.StringLength(256)]
        [System.Runtime.Serialization.DataMember(Order = 8)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string LoweredEmail
        {
            get { return _loweredEmail; }
            set
            {
                if (_loweredEmail != value)
                {
                    OnLoweredEmailChanging(value);
                    SendPropertyChanging("LoweredEmail");
                    _loweredEmail = value;
                    SendPropertyChanged("LoweredEmail");
                    OnLoweredEmailChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _passwordQuestion;

        /// <summary>
        /// Gets or sets the PasswordQuestion column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "PasswordQuestion", Storage = "_passwordQuestion", DbType = "nvarchar(256)")]
        [System.ComponentModel.DataAnnotations.StringLength(256)]
        [System.Runtime.Serialization.DataMember(Order = 9)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string PasswordQuestion
        {
            get { return _passwordQuestion; }
            set
            {
                if (_passwordQuestion != value)
                {
                    OnPasswordQuestionChanging(value);
                    SendPropertyChanging("PasswordQuestion");
                    _passwordQuestion = value;
                    SendPropertyChanged("PasswordQuestion");
                    OnPasswordQuestionChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _passwordAnswer;

        /// <summary>
        /// Gets or sets the PasswordAnswer column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "PasswordAnswer", Storage = "_passwordAnswer", DbType = "nvarchar(128)")]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        [System.Runtime.Serialization.DataMember(Order = 10)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string PasswordAnswer
        {
            get { return _passwordAnswer; }
            set
            {
                if (_passwordAnswer != value)
                {
                    OnPasswordAnswerChanging(value);
                    SendPropertyChanging("PasswordAnswer");
                    _passwordAnswer = value;
                    SendPropertyChanged("PasswordAnswer");
                    OnPasswordAnswerChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool _isApproved;

        /// <summary>
        /// Gets or sets the IsApproved column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "IsApproved", Storage = "_isApproved", DbType = "bit NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 11)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public bool IsApproved
        {
            get { return _isApproved; }
            set
            {
                if (_isApproved != value)
                {
                    OnIsApprovedChanging(value);
                    SendPropertyChanging("IsApproved");
                    _isApproved = value;
                    SendPropertyChanged("IsApproved");
                    OnIsApprovedChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool _isLockedOut;

        /// <summary>
        /// Gets or sets the IsLockedOut column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "IsLockedOut", Storage = "_isLockedOut", DbType = "bit NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 12)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public bool IsLockedOut
        {
            get { return _isLockedOut; }
            set
            {
                if (_isLockedOut != value)
                {
                    OnIsLockedOutChanging(value);
                    SendPropertyChanging("IsLockedOut");
                    _isLockedOut = value;
                    SendPropertyChanged("IsLockedOut");
                    OnIsLockedOutChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _createDate;

        /// <summary>
        /// Gets or sets the CreateDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "CreateDate", Storage = "_createDate", DbType = "datetime NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 13)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime CreateDate
        {
            get { return _createDate; }
            set
            {
                if (_createDate != value)
                {
                    OnCreateDateChanging(value);
                    SendPropertyChanging("CreateDate");
                    _createDate = value;
                    SendPropertyChanged("CreateDate");
                    OnCreateDateChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _lastLoginDate;

        /// <summary>
        /// Gets or sets the LastLoginDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LastLoginDate", Storage = "_lastLoginDate", DbType = "datetime NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 14)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime LastLoginDate
        {
            get { return _lastLoginDate; }
            set
            {
                if (_lastLoginDate != value)
                {
                    OnLastLoginDateChanging(value);
                    SendPropertyChanging("LastLoginDate");
                    _lastLoginDate = value;
                    SendPropertyChanged("LastLoginDate");
                    OnLastLoginDateChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _lastPasswordChangedDate;

        /// <summary>
        /// Gets or sets the LastPasswordChangedDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LastPasswordChangedDate", Storage = "_lastPasswordChangedDate", DbType = "datetime NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 15)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime LastPasswordChangedDate
        {
            get { return _lastPasswordChangedDate; }
            set
            {
                if (_lastPasswordChangedDate != value)
                {
                    OnLastPasswordChangedDateChanging(value);
                    SendPropertyChanging("LastPasswordChangedDate");
                    _lastPasswordChangedDate = value;
                    SendPropertyChanged("LastPasswordChangedDate");
                    OnLastPasswordChangedDateChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _lastLockoutDate;

        /// <summary>
        /// Gets or sets the LastLockoutDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LastLockoutDate", Storage = "_lastLockoutDate", DbType = "datetime NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 16)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime LastLockoutDate
        {
            get { return _lastLockoutDate; }
            set
            {
                if (_lastLockoutDate != value)
                {
                    OnLastLockoutDateChanging(value);
                    SendPropertyChanging("LastLockoutDate");
                    _lastLockoutDate = value;
                    SendPropertyChanged("LastLockoutDate");
                    OnLastLockoutDateChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private int _failedPasswordAttemptCount;

        /// <summary>
        /// Gets or sets the FailedPasswordAttemptCount column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "FailedPasswordAttemptCount", Storage = "_failedPasswordAttemptCount", DbType = "int NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 17)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public int FailedPasswordAttemptCount
        {
            get { return _failedPasswordAttemptCount; }
            set
            {
                if (_failedPasswordAttemptCount != value)
                {
                    OnFailedPasswordAttemptCountChanging(value);
                    SendPropertyChanging("FailedPasswordAttemptCount");
                    _failedPasswordAttemptCount = value;
                    SendPropertyChanged("FailedPasswordAttemptCount");
                    OnFailedPasswordAttemptCountChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _failedPasswordAttemptWindowStart;

        /// <summary>
        /// Gets or sets the FailedPasswordAttemptWindowStart column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "FailedPasswordAttemptWindowStart", Storage = "_failedPasswordAttemptWindowStart", DbType = "datetime NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 18)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime FailedPasswordAttemptWindowStart
        {
            get { return _failedPasswordAttemptWindowStart; }
            set
            {
                if (_failedPasswordAttemptWindowStart != value)
                {
                    OnFailedPasswordAttemptWindowStartChanging(value);
                    SendPropertyChanging("FailedPasswordAttemptWindowStart");
                    _failedPasswordAttemptWindowStart = value;
                    SendPropertyChanged("FailedPasswordAttemptWindowStart");
                    OnFailedPasswordAttemptWindowStartChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private int _failedPasswordAnswerAttemptCount;

        /// <summary>
        /// Gets or sets the FailedPasswordAnswerAttemptCount column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "FailedPasswordAnswerAttemptCount", Storage = "_failedPasswordAnswerAttemptCount", DbType = "int NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 19)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public int FailedPasswordAnswerAttemptCount
        {
            get { return _failedPasswordAnswerAttemptCount; }
            set
            {
                if (_failedPasswordAnswerAttemptCount != value)
                {
                    OnFailedPasswordAnswerAttemptCountChanging(value);
                    SendPropertyChanging("FailedPasswordAnswerAttemptCount");
                    _failedPasswordAnswerAttemptCount = value;
                    SendPropertyChanged("FailedPasswordAnswerAttemptCount");
                    OnFailedPasswordAnswerAttemptCountChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _failedPasswordAnswerAttemptWindowStart;

        /// <summary>
        /// Gets or sets the FailedPasswordAnswerAttemptWindowStart column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "FailedPasswordAnswerAttemptWindowStart", Storage = "_failedPasswordAnswerAttemptWindowStart", DbType = "datetime NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 20)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get { return _failedPasswordAnswerAttemptWindowStart; }
            set
            {
                if (_failedPasswordAnswerAttemptWindowStart != value)
                {
                    OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                    SendPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                    _failedPasswordAnswerAttemptWindowStart = value;
                    SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                    OnFailedPasswordAnswerAttemptWindowStartChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _comment;

        /// <summary>
        /// Gets or sets the Comment column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Comment", Storage = "_comment", DbType = "ntext", UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 21)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Comment
        {
            get { return _comment; }
            set
            {
                if (_comment != value)
                {
                    OnCommentChanging(value);
                    SendPropertyChanging("Comment");
                    _comment = value;
                    SendPropertyChanged("Comment");
                    OnCommentChanged();
                }
            }
        }
        #endregion

        #region Association Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<AspnetApplications> _aspnetApplications;

        /// <summary>
        /// Gets or sets the <see cref="AspnetApplications"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetApplications_AspnetMembership", Storage = "_aspnetApplications", ThisKey = "ApplicationId", OtherKey = "ApplicationId", IsForeignKey = true, DeleteOnNull = true)]
        [System.Runtime.Serialization.DataMember(Order = 22, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetApplications AspnetApplications
        {
            get { return (serializing && !_aspnetApplications.HasLoadedOrAssignedValue) ? null : _aspnetApplications.Entity; }
            set
            {
                AspnetApplications previousValue = _aspnetApplications.Entity;
                if (previousValue != value || _aspnetApplications.HasLoadedOrAssignedValue == false)
                {
                    OnAspnetApplicationsChanging(value);
                    SendPropertyChanging("AspnetApplications");
                    if (previousValue != null)
                    {
                        _aspnetApplications.Entity = null;
                        previousValue.AspnetMembershipList.Remove(this);
                    }
                    _aspnetApplications.Entity = value;
                    if (value != null)
                    {
                        value.AspnetMembershipList.Add(this);
                        _applicationId = value.ApplicationId;
                    }
                    else
                    {
                        _applicationId = default(System.Guid);
                    }
                    SendPropertyChanged("AspnetApplications");
                    OnAspnetApplicationsChanged();
                }
            }
        }
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<AspnetUsers> _aspnetUsers;

        /// <summary>
        /// Gets or sets the <see cref="AspnetUsers"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetUsers_AspnetMembership", Storage = "_aspnetUsers", ThisKey = "UserId", OtherKey = "UserId", IsForeignKey = true, DeleteOnNull = true)]
        [System.Runtime.Serialization.DataMember(Order = 23, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetUsers AspnetUsers
        {
            get { return (serializing && !_aspnetUsers.HasLoadedOrAssignedValue) ? null : _aspnetUsers.Entity; }
            set
            {
                AspnetUsers previousValue = _aspnetUsers.Entity;
                if (previousValue != value || _aspnetUsers.HasLoadedOrAssignedValue == false)
                {
                    OnAspnetUsersChanging(value);
                    SendPropertyChanging("AspnetUsers");
                    if (previousValue != null)
                    {
                        _aspnetUsers.Entity = null;
                        previousValue.AspnetMembership = null;
                    }
                    _aspnetUsers.Entity = value;
                    if (value != null)
                    {
                        value.AspnetMembership = this;
                        _userId = value.UserId;
                    }
                    else
                    {
                        _userId = default(System.Guid);
                    }
                    SendPropertyChanged("AspnetUsers");
                    OnAspnetUsersChanged();
                }
            }
        }
        
        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called by the static constructor to add shared rules.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static partial void AddSharedRules();
        /// <summary>Called when this instance is loaded.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreated();
        /// <summary>Called when <see cref="ApplicationId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnApplicationIdChanging(System.Guid value);
        /// <summary>Called after <see cref="ApplicationId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnApplicationIdChanged();
        /// <summary>Called when <see cref="UserId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUserIdChanging(System.Guid value);
        /// <summary>Called after <see cref="UserId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUserIdChanged();
        /// <summary>Called when <see cref="Password"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordChanging(string value);
        /// <summary>Called after <see cref="Password"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordChanged();
        /// <summary>Called when <see cref="PasswordFormat"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordFormatChanging(int value);
        /// <summary>Called after <see cref="PasswordFormat"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordFormatChanged();
        /// <summary>Called when <see cref="PasswordSalt"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordSaltChanging(string value);
        /// <summary>Called after <see cref="PasswordSalt"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordSaltChanged();
        /// <summary>Called when <see cref="MobilePIN"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnMobilePINChanging(string value);
        /// <summary>Called after <see cref="MobilePIN"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnMobilePINChanged();
        /// <summary>Called when <see cref="Email"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnEmailChanging(string value);
        /// <summary>Called after <see cref="Email"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnEmailChanged();
        /// <summary>Called when <see cref="LoweredEmail"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoweredEmailChanging(string value);
        /// <summary>Called after <see cref="LoweredEmail"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoweredEmailChanged();
        /// <summary>Called when <see cref="PasswordQuestion"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordQuestionChanging(string value);
        /// <summary>Called after <see cref="PasswordQuestion"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordQuestionChanged();
        /// <summary>Called when <see cref="PasswordAnswer"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordAnswerChanging(string value);
        /// <summary>Called after <see cref="PasswordAnswer"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPasswordAnswerChanged();
        /// <summary>Called when <see cref="IsApproved"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsApprovedChanging(bool value);
        /// <summary>Called after <see cref="IsApproved"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsApprovedChanged();
        /// <summary>Called when <see cref="IsLockedOut"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsLockedOutChanging(bool value);
        /// <summary>Called after <see cref="IsLockedOut"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsLockedOutChanged();
        /// <summary>Called when <see cref="CreateDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreateDateChanging(System.DateTime value);
        /// <summary>Called after <see cref="CreateDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreateDateChanged();
        /// <summary>Called when <see cref="LastLoginDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastLoginDateChanging(System.DateTime value);
        /// <summary>Called after <see cref="LastLoginDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastLoginDateChanged();
        /// <summary>Called when <see cref="LastPasswordChangedDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastPasswordChangedDateChanging(System.DateTime value);
        /// <summary>Called after <see cref="LastPasswordChangedDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastPasswordChangedDateChanged();
        /// <summary>Called when <see cref="LastLockoutDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastLockoutDateChanging(System.DateTime value);
        /// <summary>Called after <see cref="LastLockoutDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastLockoutDateChanged();
        /// <summary>Called when <see cref="FailedPasswordAttemptCount"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFailedPasswordAttemptCountChanging(int value);
        /// <summary>Called after <see cref="FailedPasswordAttemptCount"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFailedPasswordAttemptCountChanged();
        /// <summary>Called when <see cref="FailedPasswordAttemptWindowStart"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
        /// <summary>Called after <see cref="FailedPasswordAttemptWindowStart"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFailedPasswordAttemptWindowStartChanged();
        /// <summary>Called when <see cref="FailedPasswordAnswerAttemptCount"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
        /// <summary>Called after <see cref="FailedPasswordAnswerAttemptCount"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFailedPasswordAnswerAttemptCountChanged();
        /// <summary>Called when <see cref="FailedPasswordAnswerAttemptWindowStart"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
        /// <summary>Called after <see cref="FailedPasswordAnswerAttemptWindowStart"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
        /// <summary>Called when <see cref="Comment"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCommentChanging(string value);
        /// <summary>Called after <see cref="Comment"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCommentChanged();
        /// <summary>Called when <see cref="AspnetApplications"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetApplicationsChanging(AspnetApplications value);
        /// <summary>Called after <see cref="AspnetApplications"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetApplicationsChanged();
        /// <summary>Called when <see cref="AspnetUsers"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetUsersChanging(AspnetUsers value);
        /// <summary>Called after <see cref="AspnetUsers"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetUsersChanged();

        #endregion

        #region Serialization
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool serializing;

        /// <summary>
        /// Called when serializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerializing(System.Runtime.Serialization.StreamingContext context) {
            serializing = true;
        }

        /// <summary>
        /// Called when serialized.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerialized]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerialized(System.Runtime.Serialization.StreamingContext context) {
            serializing = false;
        }

        /// <summary>
        /// Called when deserializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnDeserializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnDeserializing(System.Runtime.Serialization.StreamingContext context) {
            Initialize();
        }

        /// <summary>
        /// Deserializes an instance of <see cref="AspnetMembership"/> from XML.
        /// </summary>
        /// <param name="xml">The XML string representing a <see cref="AspnetMembership"/> instance.</param>
        /// <returns>An instance of <see cref="AspnetMembership"/> that is deserialized from the XML string.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static AspnetMembership FromXml(string xml)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(AspnetMembership));

            using (var sr = new System.IO.StringReader(xml))
            using (var reader = System.Xml.XmlReader.Create(sr))
            {
                return deserializer.ReadObject(reader) as AspnetMembership;
            }
        }

        /// <summary>
        /// Deserializes an instance of <see cref="AspnetMembership"/> from a byte array.
        /// </summary>
        /// <param name="buffer">The byte array representing a <see cref="AspnetMembership"/> instance.</param>
        /// <returns>An instance of <see cref="AspnetMembership"/> that is deserialized from the byte array.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static AspnetMembership FromBinary(byte[] buffer)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(AspnetMembership));

            using (var ms = new System.IO.MemoryStream(buffer))
            using (var reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max))
            {
                return deserializer.ReadObject(reader) as AspnetMembership;
            }
        }
        
        #endregion

        #region Clone
        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        object ICloneable.Clone()
        {
            var serializer = new System.Runtime.Serialization.DataContractSerializer(GetType());
            using (var ms = new System.IO.MemoryStream())
            {
                serializer.WriteObject(ms, this);
                ms.Position = 0;
                return serializer.ReadObject(ms);
            }
        }

        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        /// <remarks>
        /// Only loaded <see cref="T:System.Data.Linq.EntityRef`1"/> and <see cref="T:System.Data.Linq.EntitySet`1" /> child accessions will be cloned.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetMembership Clone()
        {
            return (AspnetMembership)((ICloneable)this).Clone();
        }
        #endregion

        #region Detach Methods
        /// <summary>
        /// Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// Detaching the entity will stop all lazy loading and allow it to be added to another <see cref="System.Data.Linq.DataContext"/>.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public override void Detach()
        {
            if (!IsAttached())
                return;

            base.Detach();
            _aspnetApplications = Detach(_aspnetApplications);
            _aspnetUsers = Detach(_aspnetUsers);
        }
        #endregion
    }
}
#pragma warning restore 1591
#pragma warning restore 0414

