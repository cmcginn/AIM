#pragma warning disable 1591
#pragma warning disable 0414        
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;

namespace AIM.Data
{
    /// <summary>
    /// The class representing the dbo.aspnet_Paths table.
    /// </summary>
    [System.Data.Linq.Mapping.Table(Name="dbo.aspnet_Paths")]
    [System.Runtime.Serialization.DataContract(IsReference = true)]
    [System.ComponentModel.DataAnnotations.ScaffoldTable(true)]
    [System.ComponentModel.DataAnnotations.MetadataType(typeof(AIM.Data.AspnetPaths.Metadata))]
    [System.Data.Services.Common.DataServiceKey("PathId")]
    [System.Diagnostics.DebuggerDisplay("PathId: {PathId}")]
    public partial class AspnetPaths
        : LinqEntityBase, ICloneable, AIM.Data.IAspnetPaths  
    {
        #region Static Constructor
        /// <summary>
        /// Initializes the <see cref="AspnetPaths"/> class.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static AspnetPaths()
        {
            AddSharedRules();
        }
        #endregion

        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="AspnetPaths"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetPaths()
        {
            Initialize();
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void Initialize()
        {
            _aspnetPersonalizationAllUsers = default(System.Data.Linq.EntityRef<AspnetPersonalizationAllUsers>);
            _aspnetApplications = default(System.Data.Linq.EntityRef<AspnetApplications>);
            _aspnetPersonalizationPerUserList = new System.Data.Linq.EntitySet<AspnetPersonalizationPerUser>(OnAspnetPersonalizationPerUserListAdd, OnAspnetPersonalizationPerUserListRemove);
            OnCreated();
        }
        #endregion

        #region Column Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Guid _applicationId;

        /// <summary>
        /// Gets or sets the ApplicationId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "ApplicationId", Storage = "_applicationId", DbType = "uniqueidentifier NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 1)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Guid ApplicationId
        {
            get { return _applicationId; }
            set
            {
                if (_applicationId != value)
                {
                    if (_aspnetApplications.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnApplicationIdChanging(value);
                    SendPropertyChanging("ApplicationId");
                    _applicationId = value;
                    SendPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Guid _pathId;

        /// <summary>
        /// Gets or sets the PathId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "PathId", Storage = "_pathId", DbType = "uniqueidentifier NOT NULL", IsPrimaryKey = true, CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 2)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Guid PathId
        {
            get { return _pathId; }
            set
            {
                if (_pathId != value)
                {
                    OnPathIdChanging(value);
                    SendPropertyChanging("PathId");
                    _pathId = value;
                    SendPropertyChanged("PathId");
                    OnPathIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _path;

        /// <summary>
        /// Gets or sets the Path column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Path", Storage = "_path", DbType = "nvarchar(256) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(256)]
        [System.Runtime.Serialization.DataMember(Order = 3)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Path
        {
            get { return _path; }
            set
            {
                if (_path != value)
                {
                    OnPathChanging(value);
                    SendPropertyChanging("Path");
                    _path = value;
                    SendPropertyChanged("Path");
                    OnPathChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _loweredPath;

        /// <summary>
        /// Gets or sets the LoweredPath column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LoweredPath", Storage = "_loweredPath", DbType = "nvarchar(256) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(256)]
        [System.Runtime.Serialization.DataMember(Order = 4)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string LoweredPath
        {
            get { return _loweredPath; }
            set
            {
                if (_loweredPath != value)
                {
                    OnLoweredPathChanging(value);
                    SendPropertyChanging("LoweredPath");
                    _loweredPath = value;
                    SendPropertyChanged("LoweredPath");
                    OnLoweredPathChanged();
                }
            }
        }
        #endregion

        #region Association Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<AspnetPersonalizationAllUsers> _aspnetPersonalizationAllUsers;

        /// <summary>
        /// Gets or sets the <see cref="AspnetPersonalizationAllUsers"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetPaths_AspnetPersonalizationAllUsers", Storage = "_aspnetPersonalizationAllUsers", ThisKey = "PathId", OtherKey = "PathId", IsUnique = true)]
        [System.Runtime.Serialization.DataMember(Order = 5, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetPersonalizationAllUsers AspnetPersonalizationAllUsers
        {
            get { return (serializing && !_aspnetPersonalizationAllUsers.HasLoadedOrAssignedValue) ? null : _aspnetPersonalizationAllUsers.Entity; }
            set
            {
                AspnetPersonalizationAllUsers previousValue = _aspnetPersonalizationAllUsers.Entity;
                if (previousValue != value || _aspnetPersonalizationAllUsers.HasLoadedOrAssignedValue == false)
                {
                    OnAspnetPersonalizationAllUsersChanging(value);
                    SendPropertyChanging("AspnetPersonalizationAllUsers");
                    if (previousValue != null)
                    {
                        _aspnetPersonalizationAllUsers.Entity = null;
                        previousValue.AspnetPaths = null;
                    }
                    _aspnetPersonalizationAllUsers.Entity = value;
                    if (value != null)
                    {
                        value.AspnetPaths = this;
                    }
                    SendPropertyChanged("AspnetPersonalizationAllUsers");
                    OnAspnetPersonalizationAllUsersChanged();
                }
            }
        }
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<AspnetApplications> _aspnetApplications;

        /// <summary>
        /// Gets or sets the <see cref="AspnetApplications"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetApplications_AspnetPaths", Storage = "_aspnetApplications", ThisKey = "ApplicationId", OtherKey = "ApplicationId", IsForeignKey = true, DeleteOnNull = true)]
        [System.Runtime.Serialization.DataMember(Order = 6, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetApplications AspnetApplications
        {
            get { return (serializing && !_aspnetApplications.HasLoadedOrAssignedValue) ? null : _aspnetApplications.Entity; }
            set
            {
                AspnetApplications previousValue = _aspnetApplications.Entity;
                if (previousValue != value || _aspnetApplications.HasLoadedOrAssignedValue == false)
                {
                    OnAspnetApplicationsChanging(value);
                    SendPropertyChanging("AspnetApplications");
                    if (previousValue != null)
                    {
                        _aspnetApplications.Entity = null;
                        previousValue.AspnetPathsList.Remove(this);
                    }
                    _aspnetApplications.Entity = value;
                    if (value != null)
                    {
                        value.AspnetPathsList.Add(this);
                        _applicationId = value.ApplicationId;
                    }
                    else
                    {
                        _applicationId = default(System.Guid);
                    }
                    SendPropertyChanged("AspnetApplications");
                    OnAspnetApplicationsChanged();
                }
            }
        }
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<AspnetPersonalizationPerUser> _aspnetPersonalizationPerUserList;

        /// <summary>
        /// Gets or sets the <see cref="AspnetPersonalizationPerUser"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetPaths_AspnetPersonalizationPerUser", Storage = "_aspnetPersonalizationPerUserList", ThisKey = "PathId", OtherKey = "PathId")]
        [System.Runtime.Serialization.DataMember(Order=7, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<AspnetPersonalizationPerUser> AspnetPersonalizationPerUserList
        {
            get { return (serializing && !_aspnetPersonalizationPerUserList.HasLoadedOrAssignedValues) ? null : _aspnetPersonalizationPerUserList; }
            set { _aspnetPersonalizationPerUserList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAspnetPersonalizationPerUserListAdd(AspnetPersonalizationPerUser entity)
        {
            SendPropertyChanging(null);
            entity.AspnetPaths = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAspnetPersonalizationPerUserListRemove(AspnetPersonalizationPerUser entity)
        {
            SendPropertyChanging(null);
            entity.AspnetPaths = null;
            SendPropertyChanged(null);
        }
        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called by the static constructor to add shared rules.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static partial void AddSharedRules();
        /// <summary>Called when this instance is loaded.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreated();
        /// <summary>Called when <see cref="ApplicationId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnApplicationIdChanging(System.Guid value);
        /// <summary>Called after <see cref="ApplicationId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnApplicationIdChanged();
        /// <summary>Called when <see cref="PathId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPathIdChanging(System.Guid value);
        /// <summary>Called after <see cref="PathId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPathIdChanged();
        /// <summary>Called when <see cref="Path"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPathChanging(string value);
        /// <summary>Called after <see cref="Path"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnPathChanged();
        /// <summary>Called when <see cref="LoweredPath"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoweredPathChanging(string value);
        /// <summary>Called after <see cref="LoweredPath"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoweredPathChanged();
        /// <summary>Called when <see cref="AspnetPersonalizationAllUsers"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetPersonalizationAllUsersChanging(AspnetPersonalizationAllUsers value);
        /// <summary>Called after <see cref="AspnetPersonalizationAllUsers"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetPersonalizationAllUsersChanged();
        /// <summary>Called when <see cref="AspnetApplications"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetApplicationsChanging(AspnetApplications value);
        /// <summary>Called after <see cref="AspnetApplications"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetApplicationsChanged();

        #endregion

        #region Serialization
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool serializing;

        /// <summary>
        /// Called when serializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerializing(System.Runtime.Serialization.StreamingContext context) {
            serializing = true;
        }

        /// <summary>
        /// Called when serialized.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerialized]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerialized(System.Runtime.Serialization.StreamingContext context) {
            serializing = false;
        }

        /// <summary>
        /// Called when deserializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnDeserializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnDeserializing(System.Runtime.Serialization.StreamingContext context) {
            Initialize();
        }

        /// <summary>
        /// Deserializes an instance of <see cref="AspnetPaths"/> from XML.
        /// </summary>
        /// <param name="xml">The XML string representing a <see cref="AspnetPaths"/> instance.</param>
        /// <returns>An instance of <see cref="AspnetPaths"/> that is deserialized from the XML string.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static AspnetPaths FromXml(string xml)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(AspnetPaths));

            using (var sr = new System.IO.StringReader(xml))
            using (var reader = System.Xml.XmlReader.Create(sr))
            {
                return deserializer.ReadObject(reader) as AspnetPaths;
            }
        }

        /// <summary>
        /// Deserializes an instance of <see cref="AspnetPaths"/> from a byte array.
        /// </summary>
        /// <param name="buffer">The byte array representing a <see cref="AspnetPaths"/> instance.</param>
        /// <returns>An instance of <see cref="AspnetPaths"/> that is deserialized from the byte array.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static AspnetPaths FromBinary(byte[] buffer)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(AspnetPaths));

            using (var ms = new System.IO.MemoryStream(buffer))
            using (var reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max))
            {
                return deserializer.ReadObject(reader) as AspnetPaths;
            }
        }
        
        #endregion

        #region Clone
        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        object ICloneable.Clone()
        {
            var serializer = new System.Runtime.Serialization.DataContractSerializer(GetType());
            using (var ms = new System.IO.MemoryStream())
            {
                serializer.WriteObject(ms, this);
                ms.Position = 0;
                return serializer.ReadObject(ms);
            }
        }

        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        /// <remarks>
        /// Only loaded <see cref="T:System.Data.Linq.EntityRef`1"/> and <see cref="T:System.Data.Linq.EntitySet`1" /> child accessions will be cloned.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetPaths Clone()
        {
            return (AspnetPaths)((ICloneable)this).Clone();
        }
        #endregion

        #region Detach Methods
        /// <summary>
        /// Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// Detaching the entity will stop all lazy loading and allow it to be added to another <see cref="System.Data.Linq.DataContext"/>.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public override void Detach()
        {
            if (!IsAttached())
                return;

            base.Detach();
            _aspnetPersonalizationAllUsers = Detach(_aspnetPersonalizationAllUsers);
            _aspnetApplications = Detach(_aspnetApplications);
            _aspnetPersonalizationPerUserList = Detach(_aspnetPersonalizationPerUserList, OnAspnetPersonalizationPerUserListAdd, OnAspnetPersonalizationPerUserListRemove);
        }
        #endregion
    }
}
#pragma warning restore 1591
#pragma warning restore 0414

