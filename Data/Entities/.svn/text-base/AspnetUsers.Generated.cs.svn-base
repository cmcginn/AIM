#pragma warning disable 1591
#pragma warning disable 0414        
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;

namespace AIM.Data
{
    /// <summary>
    /// The class representing the dbo.aspnet_Users table.
    /// </summary>
    [System.Data.Linq.Mapping.Table(Name="dbo.aspnet_Users")]
    [System.Runtime.Serialization.DataContract(IsReference = true)]
    [System.ComponentModel.DataAnnotations.ScaffoldTable(true)]
    [System.ComponentModel.DataAnnotations.MetadataType(typeof(AIM.Data.AspnetUsers.Metadata))]
    [System.Data.Services.Common.DataServiceKey("UserId")]
    [System.Diagnostics.DebuggerDisplay("UserId: {UserId}")]
    public partial class AspnetUsers
        : LinqEntityBase, ICloneable, AIM.Data.IAspnetUsers  
    {
        #region Static Constructor
        /// <summary>
        /// Initializes the <see cref="AspnetUsers"/> class.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static AspnetUsers()
        {
            AddSharedRules();
        }
        #endregion

        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="AspnetUsers"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetUsers()
        {
            Initialize();
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void Initialize()
        {
            _aspnetMembership = default(System.Data.Linq.EntityRef<AspnetMembership>);
            _aspnetProfile = default(System.Data.Linq.EntityRef<AspnetProfile>);
            _aspnetApplications = default(System.Data.Linq.EntityRef<AspnetApplications>);
            _aspnetPersonalizationPerUserList = new System.Data.Linq.EntitySet<AspnetPersonalizationPerUser>(OnAspnetPersonalizationPerUserListAdd, OnAspnetPersonalizationPerUserListRemove);
            _aspnetUsersInRolesList = new System.Data.Linq.EntitySet<AspnetUsersInRoles>(OnAspnetUsersInRolesListAdd, OnAspnetUsersInRolesListRemove);
            OnCreated();
        }
        #endregion

        #region Column Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Guid _applicationId;

        /// <summary>
        /// Gets or sets the ApplicationId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "ApplicationId", Storage = "_applicationId", DbType = "uniqueidentifier NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 1)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Guid ApplicationId
        {
            get { return _applicationId; }
            set
            {
                if (_applicationId != value)
                {
                    if (_aspnetApplications.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnApplicationIdChanging(value);
                    SendPropertyChanging("ApplicationId");
                    _applicationId = value;
                    SendPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Guid _userId;

        /// <summary>
        /// Gets or sets the UserId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "UserId", Storage = "_userId", DbType = "uniqueidentifier NOT NULL", IsPrimaryKey = true, CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 2)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Guid UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    OnUserIdChanging(value);
                    SendPropertyChanging("UserId");
                    _userId = value;
                    SendPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _userName;

        /// <summary>
        /// Gets or sets the UserName column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "UserName", Storage = "_userName", DbType = "nvarchar(256) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(256)]
        [System.Runtime.Serialization.DataMember(Order = 3)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string UserName
        {
            get { return _userName; }
            set
            {
                if (_userName != value)
                {
                    OnUserNameChanging(value);
                    SendPropertyChanging("UserName");
                    _userName = value;
                    SendPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _loweredUserName;

        /// <summary>
        /// Gets or sets the LoweredUserName column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LoweredUserName", Storage = "_loweredUserName", DbType = "nvarchar(256) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(256)]
        [System.Runtime.Serialization.DataMember(Order = 4)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string LoweredUserName
        {
            get { return _loweredUserName; }
            set
            {
                if (_loweredUserName != value)
                {
                    OnLoweredUserNameChanging(value);
                    SendPropertyChanging("LoweredUserName");
                    _loweredUserName = value;
                    SendPropertyChanged("LoweredUserName");
                    OnLoweredUserNameChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _mobileAlias;

        /// <summary>
        /// Gets or sets the MobileAlias column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "MobileAlias", Storage = "_mobileAlias", DbType = "nvarchar(16)")]
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        [System.Runtime.Serialization.DataMember(Order = 5)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string MobileAlias
        {
            get { return _mobileAlias; }
            set
            {
                if (_mobileAlias != value)
                {
                    OnMobileAliasChanging(value);
                    SendPropertyChanging("MobileAlias");
                    _mobileAlias = value;
                    SendPropertyChanged("MobileAlias");
                    OnMobileAliasChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool _isAnonymous;

        /// <summary>
        /// Gets or sets the IsAnonymous column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "IsAnonymous", Storage = "_isAnonymous", DbType = "bit NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 6)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public bool IsAnonymous
        {
            get { return _isAnonymous; }
            set
            {
                if (_isAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    SendPropertyChanging("IsAnonymous");
                    _isAnonymous = value;
                    SendPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _lastActivityDate;

        /// <summary>
        /// Gets or sets the LastActivityDate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "LastActivityDate", Storage = "_lastActivityDate", DbType = "datetime NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 7)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime LastActivityDate
        {
            get { return _lastActivityDate; }
            set
            {
                if (_lastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    SendPropertyChanging("LastActivityDate");
                    _lastActivityDate = value;
                    SendPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        #endregion

        #region Association Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<AspnetMembership> _aspnetMembership;

        /// <summary>
        /// Gets or sets the <see cref="AspnetMembership"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetUsers_AspnetMembership", Storage = "_aspnetMembership", ThisKey = "UserId", OtherKey = "UserId", IsUnique = true)]
        [System.Runtime.Serialization.DataMember(Order = 8, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetMembership AspnetMembership
        {
            get { return (serializing && !_aspnetMembership.HasLoadedOrAssignedValue) ? null : _aspnetMembership.Entity; }
            set
            {
                AspnetMembership previousValue = _aspnetMembership.Entity;
                if (previousValue != value || _aspnetMembership.HasLoadedOrAssignedValue == false)
                {
                    OnAspnetMembershipChanging(value);
                    SendPropertyChanging("AspnetMembership");
                    if (previousValue != null)
                    {
                        _aspnetMembership.Entity = null;
                        previousValue.AspnetUsers = null;
                    }
                    _aspnetMembership.Entity = value;
                    if (value != null)
                    {
                        value.AspnetUsers = this;
                    }
                    SendPropertyChanged("AspnetMembership");
                    OnAspnetMembershipChanged();
                }
            }
        }
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<AspnetProfile> _aspnetProfile;

        /// <summary>
        /// Gets or sets the <see cref="AspnetProfile"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetUsers_AspnetProfile", Storage = "_aspnetProfile", ThisKey = "UserId", OtherKey = "UserId", IsUnique = true)]
        [System.Runtime.Serialization.DataMember(Order = 9, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetProfile AspnetProfile
        {
            get { return (serializing && !_aspnetProfile.HasLoadedOrAssignedValue) ? null : _aspnetProfile.Entity; }
            set
            {
                AspnetProfile previousValue = _aspnetProfile.Entity;
                if (previousValue != value || _aspnetProfile.HasLoadedOrAssignedValue == false)
                {
                    OnAspnetProfileChanging(value);
                    SendPropertyChanging("AspnetProfile");
                    if (previousValue != null)
                    {
                        _aspnetProfile.Entity = null;
                        previousValue.AspnetUsers = null;
                    }
                    _aspnetProfile.Entity = value;
                    if (value != null)
                    {
                        value.AspnetUsers = this;
                    }
                    SendPropertyChanged("AspnetProfile");
                    OnAspnetProfileChanged();
                }
            }
        }
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<AspnetApplications> _aspnetApplications;

        /// <summary>
        /// Gets or sets the <see cref="AspnetApplications"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetApplications_AspnetUsers", Storage = "_aspnetApplications", ThisKey = "ApplicationId", OtherKey = "ApplicationId", IsForeignKey = true, DeleteOnNull = true)]
        [System.Runtime.Serialization.DataMember(Order = 10, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetApplications AspnetApplications
        {
            get { return (serializing && !_aspnetApplications.HasLoadedOrAssignedValue) ? null : _aspnetApplications.Entity; }
            set
            {
                AspnetApplications previousValue = _aspnetApplications.Entity;
                if (previousValue != value || _aspnetApplications.HasLoadedOrAssignedValue == false)
                {
                    OnAspnetApplicationsChanging(value);
                    SendPropertyChanging("AspnetApplications");
                    if (previousValue != null)
                    {
                        _aspnetApplications.Entity = null;
                        previousValue.AspnetUsersList.Remove(this);
                    }
                    _aspnetApplications.Entity = value;
                    if (value != null)
                    {
                        value.AspnetUsersList.Add(this);
                        _applicationId = value.ApplicationId;
                    }
                    else
                    {
                        _applicationId = default(System.Guid);
                    }
                    SendPropertyChanged("AspnetApplications");
                    OnAspnetApplicationsChanged();
                }
            }
        }
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<AspnetPersonalizationPerUser> _aspnetPersonalizationPerUserList;

        /// <summary>
        /// Gets or sets the <see cref="AspnetPersonalizationPerUser"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetUsers_AspnetPersonalizationPerUser", Storage = "_aspnetPersonalizationPerUserList", ThisKey = "UserId", OtherKey = "UserId")]
        [System.Runtime.Serialization.DataMember(Order=11, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<AspnetPersonalizationPerUser> AspnetPersonalizationPerUserList
        {
            get { return (serializing && !_aspnetPersonalizationPerUserList.HasLoadedOrAssignedValues) ? null : _aspnetPersonalizationPerUserList; }
            set { _aspnetPersonalizationPerUserList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAspnetPersonalizationPerUserListAdd(AspnetPersonalizationPerUser entity)
        {
            SendPropertyChanging(null);
            entity.AspnetUsers = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAspnetPersonalizationPerUserListRemove(AspnetPersonalizationPerUser entity)
        {
            SendPropertyChanging(null);
            entity.AspnetUsers = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<AspnetUsersInRoles> _aspnetUsersInRolesList;

        /// <summary>
        /// Gets or sets the <see cref="AspnetUsersInRoles"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "AspnetUsers_AspnetUsersInRoles", Storage = "_aspnetUsersInRolesList", ThisKey = "UserId", OtherKey = "UserId")]
        [System.Runtime.Serialization.DataMember(Order=12, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<AspnetUsersInRoles> AspnetUsersInRolesList
        {
            get { return (serializing && !_aspnetUsersInRolesList.HasLoadedOrAssignedValues) ? null : _aspnetUsersInRolesList; }
            set { _aspnetUsersInRolesList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAspnetUsersInRolesListAdd(AspnetUsersInRoles entity)
        {
            SendPropertyChanging(null);
            entity.AspnetUsers = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAspnetUsersInRolesListRemove(AspnetUsersInRoles entity)
        {
            SendPropertyChanging(null);
            entity.AspnetUsers = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<AspnetRoles> _aspnetRolesList;

        /// <summary>
        /// Gets or sets the Many To Many AspnetRolesList list.
        /// </summary>
        /// <value>The AspnetRolesList list.</value>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<AspnetRoles> AspnetRolesList
        {
            get
            {
                if (serializing)
                    return null;

                if (_aspnetRolesList == null)
                {
                    _aspnetRolesList = new System.Data.Linq.EntitySet<AspnetRoles>(OnAspnetRolesListAdd, OnAspnetRolesListRemove);
                    _aspnetRolesList.SetSource(AspnetUsersInRolesList.Select(c => c.AspnetRoles));
                }
                return _aspnetRolesList;
            }
            set
            {
                _aspnetRolesList.Assign(value);
            }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAspnetRolesListAdd(AspnetRoles entity)
        {
            SendPropertyChanging(null);
            AspnetUsersInRolesList.Add(new AspnetUsersInRoles { AspnetUsers = this, AspnetRoles = entity });
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnAspnetRolesListRemove(AspnetRoles entity)
        {
            SendPropertyChanging(null);
            var aspnetUsersInRoles = AspnetUsersInRolesList.FirstOrDefault(c => c.UserId == UserId
                && c.RoleId == entity.RoleId);
            AspnetUsersInRolesList.Remove( aspnetUsersInRoles);
            SendPropertyChanged(null);
        }

        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called by the static constructor to add shared rules.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static partial void AddSharedRules();
        /// <summary>Called when this instance is loaded.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreated();
        /// <summary>Called when <see cref="ApplicationId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnApplicationIdChanging(System.Guid value);
        /// <summary>Called after <see cref="ApplicationId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnApplicationIdChanged();
        /// <summary>Called when <see cref="UserId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUserIdChanging(System.Guid value);
        /// <summary>Called after <see cref="UserId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUserIdChanged();
        /// <summary>Called when <see cref="UserName"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUserNameChanging(string value);
        /// <summary>Called after <see cref="UserName"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUserNameChanged();
        /// <summary>Called when <see cref="LoweredUserName"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoweredUserNameChanging(string value);
        /// <summary>Called after <see cref="LoweredUserName"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoweredUserNameChanged();
        /// <summary>Called when <see cref="MobileAlias"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnMobileAliasChanging(string value);
        /// <summary>Called after <see cref="MobileAlias"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnMobileAliasChanged();
        /// <summary>Called when <see cref="IsAnonymous"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsAnonymousChanging(bool value);
        /// <summary>Called after <see cref="IsAnonymous"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsAnonymousChanged();
        /// <summary>Called when <see cref="LastActivityDate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastActivityDateChanging(System.DateTime value);
        /// <summary>Called after <see cref="LastActivityDate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLastActivityDateChanged();
        /// <summary>Called when <see cref="AspnetMembership"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetMembershipChanging(AspnetMembership value);
        /// <summary>Called after <see cref="AspnetMembership"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetMembershipChanged();
        /// <summary>Called when <see cref="AspnetProfile"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetProfileChanging(AspnetProfile value);
        /// <summary>Called after <see cref="AspnetProfile"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetProfileChanged();
        /// <summary>Called when <see cref="AspnetApplications"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetApplicationsChanging(AspnetApplications value);
        /// <summary>Called after <see cref="AspnetApplications"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAspnetApplicationsChanged();

        #endregion

        #region Serialization
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool serializing;

        /// <summary>
        /// Called when serializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerializing(System.Runtime.Serialization.StreamingContext context) {
            serializing = true;
        }

        /// <summary>
        /// Called when serialized.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerialized]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerialized(System.Runtime.Serialization.StreamingContext context) {
            serializing = false;
        }

        /// <summary>
        /// Called when deserializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnDeserializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnDeserializing(System.Runtime.Serialization.StreamingContext context) {
            Initialize();
        }

        /// <summary>
        /// Deserializes an instance of <see cref="AspnetUsers"/> from XML.
        /// </summary>
        /// <param name="xml">The XML string representing a <see cref="AspnetUsers"/> instance.</param>
        /// <returns>An instance of <see cref="AspnetUsers"/> that is deserialized from the XML string.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static AspnetUsers FromXml(string xml)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(AspnetUsers));

            using (var sr = new System.IO.StringReader(xml))
            using (var reader = System.Xml.XmlReader.Create(sr))
            {
                return deserializer.ReadObject(reader) as AspnetUsers;
            }
        }

        /// <summary>
        /// Deserializes an instance of <see cref="AspnetUsers"/> from a byte array.
        /// </summary>
        /// <param name="buffer">The byte array representing a <see cref="AspnetUsers"/> instance.</param>
        /// <returns>An instance of <see cref="AspnetUsers"/> that is deserialized from the byte array.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static AspnetUsers FromBinary(byte[] buffer)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(AspnetUsers));

            using (var ms = new System.IO.MemoryStream(buffer))
            using (var reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max))
            {
                return deserializer.ReadObject(reader) as AspnetUsers;
            }
        }
        
        #endregion

        #region Clone
        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        object ICloneable.Clone()
        {
            var serializer = new System.Runtime.Serialization.DataContractSerializer(GetType());
            using (var ms = new System.IO.MemoryStream())
            {
                serializer.WriteObject(ms, this);
                ms.Position = 0;
                return serializer.ReadObject(ms);
            }
        }

        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        /// <remarks>
        /// Only loaded <see cref="T:System.Data.Linq.EntityRef`1"/> and <see cref="T:System.Data.Linq.EntitySet`1" /> child accessions will be cloned.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public AspnetUsers Clone()
        {
            return (AspnetUsers)((ICloneable)this).Clone();
        }
        #endregion

        #region Detach Methods
        /// <summary>
        /// Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// Detaching the entity will stop all lazy loading and allow it to be added to another <see cref="System.Data.Linq.DataContext"/>.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public override void Detach()
        {
            if (!IsAttached())
                return;

            base.Detach();
            _aspnetMembership = Detach(_aspnetMembership);
            _aspnetProfile = Detach(_aspnetProfile);
            _aspnetApplications = Detach(_aspnetApplications);
            _aspnetPersonalizationPerUserList = Detach(_aspnetPersonalizationPerUserList, OnAspnetPersonalizationPerUserListAdd, OnAspnetPersonalizationPerUserListRemove);
            _aspnetUsersInRolesList = Detach(_aspnetUsersInRolesList, OnAspnetUsersInRolesListAdd, OnAspnetUsersInRolesListRemove);
        }
        #endregion
    }
}
#pragma warning restore 1591
#pragma warning restore 0414

