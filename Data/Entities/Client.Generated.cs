#pragma warning disable 1591
#pragma warning disable 0414        
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;

namespace AIM.Data
{
    /// <summary>
    /// The class representing the dbo.Client table.
    /// </summary>
    [System.Data.Linq.Mapping.Table(Name="dbo.Client")]
    [System.Runtime.Serialization.DataContract(IsReference = true)]
    [System.ComponentModel.DataAnnotations.ScaffoldTable(true)]
    [System.ComponentModel.DataAnnotations.MetadataType(typeof(AIM.Data.Client.Metadata))]
    [System.Data.Services.Common.DataServiceKey("Id")]
    [System.Diagnostics.DebuggerDisplay("Id: {Id}")]
    public partial class Client
        : LinqEntityBase, ICloneable, AIM.Data.IClient  
    {
        #region Static Constructor
        /// <summary>
        /// Initializes the <see cref="Client"/> class.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static Client()
        {
            AddSharedRules();
        }
        #endregion

        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Client"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public Client()
        {
            Initialize();
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void Initialize()
        {
            _importType = default(System.Data.Linq.EntityRef<ImportType>);
            _clientProperties = default(System.Data.Linq.EntityRef<ClientProperties>);
            _contactList = new System.Data.Linq.EntitySet<Contact>(OnContactListAdd, OnContactListRemove);
            _clientFileImportList = new System.Data.Linq.EntitySet<ClientFileImport>(OnClientFileImportListAdd, OnClientFileImportListRemove);
            OnCreated();
        }
        #endregion

        #region Column Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Guid _id;

        /// <summary>
        /// Gets or sets the Id column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Id", Storage = "_id", DbType = "uniqueidentifier NOT NULL", IsPrimaryKey = true, CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 1)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Guid Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    SendPropertyChanging("Id");
                    _id = value;
                    SendPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private int _importTypeId;

        /// <summary>
        /// Gets or sets the ImportTypeId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "ImportTypeId", Storage = "_importTypeId", DbType = "int NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 2)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public int ImportTypeId
        {
            get { return _importTypeId; }
            set
            {
                if (_importTypeId != value)
                {
                    if (_importType.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnImportTypeIdChanging(value);
                    SendPropertyChanging("ImportTypeId");
                    _importTypeId = value;
                    SendPropertyChanged("ImportTypeId");
                    OnImportTypeIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _created;

        /// <summary>
        /// Gets or sets the Created column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Created", Storage = "_created", DbType = "datetime NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 3)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime Created
        {
            get { return _created; }
            set
            {
                if (_created != value)
                {
                    OnCreatedChanging(value);
                    SendPropertyChanging("Created");
                    _created = value;
                    SendPropertyChanged("Created");
                    OnCreatedChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.DateTime _updated;

        /// <summary>
        /// Gets or sets the Updated column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Updated", Storage = "_updated", DbType = "datetime NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 4)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.DateTime Updated
        {
            get { return _updated; }
            set
            {
                if (_updated != value)
                {
                    OnUpdatedChanging(value);
                    SendPropertyChanging("Updated");
                    _updated = value;
                    SendPropertyChanged("Updated");
                    OnUpdatedChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool _active;

        /// <summary>
        /// Gets or sets the Active column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Active", Storage = "_active", DbType = "bit NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 5)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public bool Active
        {
            get { return _active; }
            set
            {
                if (_active != value)
                {
                    OnActiveChanging(value);
                    SendPropertyChanging("Active");
                    _active = value;
                    SendPropertyChanged("Active");
                    OnActiveChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Xml.Linq.XElement _clientParameters;

        /// <summary>
        /// Gets or sets the ClientParameters column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "ClientParameters", Storage = "_clientParameters", DbType = "xml NOT NULL", CanBeNull = false, UpdateCheck = System.Data.Linq.Mapping.UpdateCheck.Never)]
        [System.Runtime.Serialization.DataMember(Order = 6)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Xml.Linq.XElement ClientParameters
        {
            get { return _clientParameters; }
            set
            {
                if (_clientParameters != value)
                {
                    OnClientParametersChanging(value);
                    SendPropertyChanging("ClientParameters");
                    _clientParameters = value;
                    SendPropertyChanged("ClientParameters");
                    OnClientParametersChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private int _accountId;

        /// <summary>
        /// Gets or sets the AccountId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "AccountId", Storage = "_accountId", DbType = "int NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 7)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public int AccountId
        {
            get { return _accountId; }
            set
            {
                if (_accountId != value)
                {
                    OnAccountIdChanging(value);
                    SendPropertyChanging("AccountId");
                    _accountId = value;
                    SendPropertyChanged("AccountId");
                    OnAccountIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _apiKey;

        /// <summary>
        /// Gets or sets the ApiKey column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "ApiKey", Storage = "_apiKey", DbType = "nvarchar(50) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        [System.Runtime.Serialization.DataMember(Order = 8)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string ApiKey
        {
            get { return _apiKey; }
            set
            {
                if (_apiKey != value)
                {
                    OnApiKeyChanging(value);
                    SendPropertyChanging("ApiKey");
                    _apiKey = value;
                    SendPropertyChanged("ApiKey");
                    OnApiKeyChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _company;

        /// <summary>
        /// Gets or sets the Company column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Company", Storage = "_company", DbType = "nvarchar(255)")]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        [System.Runtime.Serialization.DataMember(Order = 9)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Company
        {
            get { return _company; }
            set
            {
                if (_company != value)
                {
                    OnCompanyChanging(value);
                    SendPropertyChanging("Company");
                    _company = value;
                    SendPropertyChanged("Company");
                    OnCompanyChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool _enableUpdates;

        /// <summary>
        /// Gets or sets the EnableUpdates column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "EnableUpdates", Storage = "_enableUpdates", DbType = "bit NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 10)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public bool EnableUpdates
        {
            get { return _enableUpdates; }
            set
            {
                if (_enableUpdates != value)
                {
                    OnEnableUpdatesChanging(value);
                    SendPropertyChanging("EnableUpdates");
                    _enableUpdates = value;
                    SendPropertyChanged("EnableUpdates");
                    OnEnableUpdatesChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool _isDeleted;

        /// <summary>
        /// Gets or sets the IsDeleted column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "IsDeleted", Storage = "_isDeleted", DbType = "bit NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 11)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public bool IsDeleted
        {
            get { return _isDeleted; }
            set
            {
                if (_isDeleted != value)
                {
                    OnIsDeletedChanging(value);
                    SendPropertyChanging("IsDeleted");
                    _isDeleted = value;
                    SendPropertyChanged("IsDeleted");
                    OnIsDeletedChanged();
                }
            }
        }
        #endregion

        #region Association Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<ImportType> _importType;

        /// <summary>
        /// Gets or sets the <see cref="ImportType"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "ImportType_Client", Storage = "_importType", ThisKey = "ImportTypeId", OtherKey = "Id", IsForeignKey = true)]
        [System.Runtime.Serialization.DataMember(Order = 12, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public ImportType ImportType
        {
            get { return (serializing && !_importType.HasLoadedOrAssignedValue) ? null : _importType.Entity; }
            set
            {
                ImportType previousValue = _importType.Entity;
                if (previousValue != value || _importType.HasLoadedOrAssignedValue == false)
                {
                    OnImportTypeChanging(value);
                    SendPropertyChanging("ImportType");
                    if (previousValue != null)
                    {
                        _importType.Entity = null;
                        previousValue.ClientList.Remove(this);
                    }
                    _importType.Entity = value;
                    if (value != null)
                    {
                        value.ClientList.Add(this);
                        _importTypeId = value.Id;
                    }
                    else
                    {
                        _importTypeId = default(int);
                    }
                    SendPropertyChanged("ImportType");
                    OnImportTypeChanged();
                }
            }
        }
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<ClientProperties> _clientProperties;

        /// <summary>
        /// Gets or sets the <see cref="ClientProperties"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "Client_ClientProperties", Storage = "_clientProperties", ThisKey = "Id", OtherKey = "ClientId", IsUnique = true)]
        [System.Runtime.Serialization.DataMember(Order = 13, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public ClientProperties ClientProperties
        {
            get { return (serializing && !_clientProperties.HasLoadedOrAssignedValue) ? null : _clientProperties.Entity; }
            set
            {
                ClientProperties previousValue = _clientProperties.Entity;
                if (previousValue != value || _clientProperties.HasLoadedOrAssignedValue == false)
                {
                    OnClientPropertiesChanging(value);
                    SendPropertyChanging("ClientProperties");
                    if (previousValue != null)
                    {
                        _clientProperties.Entity = null;
                        previousValue.Client = null;
                    }
                    _clientProperties.Entity = value;
                    if (value != null)
                    {
                        value.Client = this;
                    }
                    SendPropertyChanged("ClientProperties");
                    OnClientPropertiesChanged();
                }
            }
        }
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<Contact> _contactList;

        /// <summary>
        /// Gets or sets the <see cref="Contact"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "Client_Contact", Storage = "_contactList", ThisKey = "Id", OtherKey = "ClientId")]
        [System.Runtime.Serialization.DataMember(Order=14, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<Contact> ContactList
        {
            get { return (serializing && !_contactList.HasLoadedOrAssignedValues) ? null : _contactList; }
            set { _contactList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnContactListAdd(Contact entity)
        {
            SendPropertyChanging(null);
            entity.Client = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnContactListRemove(Contact entity)
        {
            SendPropertyChanging(null);
            entity.Client = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<ClientFileImport> _clientFileImportList;

        /// <summary>
        /// Gets or sets the <see cref="ClientFileImport"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "Client_ClientFileImport", Storage = "_clientFileImportList", ThisKey = "Id", OtherKey = "ClientId")]
        [System.Runtime.Serialization.DataMember(Order=15, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<ClientFileImport> ClientFileImportList
        {
            get { return (serializing && !_clientFileImportList.HasLoadedOrAssignedValues) ? null : _clientFileImportList; }
            set { _clientFileImportList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnClientFileImportListAdd(ClientFileImport entity)
        {
            SendPropertyChanging(null);
            entity.Client = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnClientFileImportListRemove(ClientFileImport entity)
        {
            SendPropertyChanging(null);
            entity.Client = null;
            SendPropertyChanged(null);
        }
        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called by the static constructor to add shared rules.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static partial void AddSharedRules();
        /// <summary>Called when this instance is loaded.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreated();
        /// <summary>Called when <see cref="Id"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIdChanging(System.Guid value);
        /// <summary>Called after <see cref="Id"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIdChanged();
        /// <summary>Called when <see cref="ImportTypeId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnImportTypeIdChanging(int value);
        /// <summary>Called after <see cref="ImportTypeId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnImportTypeIdChanged();
        /// <summary>Called when <see cref="Created"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreatedChanging(System.DateTime value);
        /// <summary>Called after <see cref="Created"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreatedChanged();
        /// <summary>Called when <see cref="Updated"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUpdatedChanging(System.DateTime value);
        /// <summary>Called after <see cref="Updated"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUpdatedChanged();
        /// <summary>Called when <see cref="Active"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnActiveChanging(bool value);
        /// <summary>Called after <see cref="Active"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnActiveChanged();
        /// <summary>Called when <see cref="ClientParameters"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnClientParametersChanging(System.Xml.Linq.XElement value);
        /// <summary>Called after <see cref="ClientParameters"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnClientParametersChanged();
        /// <summary>Called when <see cref="AccountId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAccountIdChanging(int value);
        /// <summary>Called after <see cref="AccountId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnAccountIdChanged();
        /// <summary>Called when <see cref="ApiKey"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnApiKeyChanging(string value);
        /// <summary>Called after <see cref="ApiKey"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnApiKeyChanged();
        /// <summary>Called when <see cref="Company"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCompanyChanging(string value);
        /// <summary>Called after <see cref="Company"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCompanyChanged();
        /// <summary>Called when <see cref="EnableUpdates"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnEnableUpdatesChanging(bool value);
        /// <summary>Called after <see cref="EnableUpdates"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnEnableUpdatesChanged();
        /// <summary>Called when <see cref="IsDeleted"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsDeletedChanging(bool value);
        /// <summary>Called after <see cref="IsDeleted"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIsDeletedChanged();
        /// <summary>Called when <see cref="ImportType"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnImportTypeChanging(ImportType value);
        /// <summary>Called after <see cref="ImportType"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnImportTypeChanged();
        /// <summary>Called when <see cref="ClientProperties"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnClientPropertiesChanging(ClientProperties value);
        /// <summary>Called after <see cref="ClientProperties"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnClientPropertiesChanged();

        #endregion

        #region Serialization
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool serializing;

        /// <summary>
        /// Called when serializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerializing(System.Runtime.Serialization.StreamingContext context) {
            serializing = true;
        }

        /// <summary>
        /// Called when serialized.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerialized]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerialized(System.Runtime.Serialization.StreamingContext context) {
            serializing = false;
        }

        /// <summary>
        /// Called when deserializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnDeserializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnDeserializing(System.Runtime.Serialization.StreamingContext context) {
            Initialize();
        }

        /// <summary>
        /// Deserializes an instance of <see cref="Client"/> from XML.
        /// </summary>
        /// <param name="xml">The XML string representing a <see cref="Client"/> instance.</param>
        /// <returns>An instance of <see cref="Client"/> that is deserialized from the XML string.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static Client FromXml(string xml)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(Client));

            using (var sr = new System.IO.StringReader(xml))
            using (var reader = System.Xml.XmlReader.Create(sr))
            {
                return deserializer.ReadObject(reader) as Client;
            }
        }

        /// <summary>
        /// Deserializes an instance of <see cref="Client"/> from a byte array.
        /// </summary>
        /// <param name="buffer">The byte array representing a <see cref="Client"/> instance.</param>
        /// <returns>An instance of <see cref="Client"/> that is deserialized from the byte array.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static Client FromBinary(byte[] buffer)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(Client));

            using (var ms = new System.IO.MemoryStream(buffer))
            using (var reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max))
            {
                return deserializer.ReadObject(reader) as Client;
            }
        }
        
        #endregion

        #region Clone
        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        object ICloneable.Clone()
        {
            var serializer = new System.Runtime.Serialization.DataContractSerializer(GetType());
            using (var ms = new System.IO.MemoryStream())
            {
                serializer.WriteObject(ms, this);
                ms.Position = 0;
                return serializer.ReadObject(ms);
            }
        }

        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        /// <remarks>
        /// Only loaded <see cref="T:System.Data.Linq.EntityRef`1"/> and <see cref="T:System.Data.Linq.EntitySet`1" /> child accessions will be cloned.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public Client Clone()
        {
            return (Client)((ICloneable)this).Clone();
        }
        #endregion

        #region Detach Methods
        /// <summary>
        /// Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// Detaching the entity will stop all lazy loading and allow it to be added to another <see cref="System.Data.Linq.DataContext"/>.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public override void Detach()
        {
            if (!IsAttached())
                return;

            base.Detach();
            _importType = Detach(_importType);
            _clientProperties = Detach(_clientProperties);
            _contactList = Detach(_contactList, OnContactListAdd, OnContactListRemove);
            _clientFileImportList = Detach(_clientFileImportList, OnClientFileImportListAdd, OnClientFileImportListRemove);
        }
        #endregion
    }
}
#pragma warning restore 1591
#pragma warning restore 0414

